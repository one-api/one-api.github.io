{"version":3,"file":"static/js/7446.941092f9.chunk.js","mappings":"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","sources":["../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/python/python.js","../node_modules/codemirror/mode/rst/rst.js","../node_modules/codemirror/mode/stex/stex.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\", \"False\", \"True\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins).concat([\"exec\", \"print\"]));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatibility with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"None\", \"aiter\", \"anext\", \"async\", \"await\", \"breakpoint\", \"match\", \"case\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(rb)|(fr)|(rf))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return inFormat ? null :ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state, true)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^[\\s\\[\\{\\(]*(?:#|$)/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) {\n        state.beginningOfLine = true;\n        state.dedent = false;\n      }\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent = true;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\" && stream.match(/^\\s*(?:#|$)/, false))\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent && stream.eol() && top(state).type == \"py\" && state.scopes.length > 1)\n        state.scopes.pop();\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state)\n        var closing = scope.type == textAfter.charAt(0) ||\n            scope.type == \"py\" && !state.dedent && /^(else:|elif |except |finally:)/.test(textAfter)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function(_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n      if (plug) {\n        plug.closeBracket();\n      }\n    }\n\n    // returns the non-default plugin closest to the end of the list\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n        return plug;\n      }\n      return { styleIdentifier: function() { return null; } };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function() {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n        this.openBracket = function() {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n        this.closeBracket = function() {};\n      };\n    }\n\n    var plugins = {};\n\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n    plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n    plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n    plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n    plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    }\n\n    // called when in a normal (no environment) context\n    function normal(source, state) {\n      var plug;\n      // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      }\n\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      }\n\n      // find if we're starting various math modes\n      if (source.match(\"\\\\[\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"\\\\(\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      }\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      }\n      // special math-mode characters\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      }\n      // non-special characters\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n      var ch = source.next();\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(), lastPlug;\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n      setState(state, normal);\n      popCommand(state);\n\n      return normal(source, state);\n    }\n\n    return {\n      startState: function() {\n        var f = parserConfig.inMathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n\n});\n"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","require","wordRegexp","words","RegExp","join","wordOperators","commonKeywords","commonBuiltins","top","scopes","length","registerHelper","concat","defineMode","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","undefined","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","tokenBase","sol","lastToken","indentation","type","scopeOffset","offset","eatSpace","lineOffset","pushPyScope","dedent","peek","errorToken","style","tokenBaseInner","inFormat","match","floatLiteral","eat","intLiteral","current","toLowerCase","indexOf","tokenize","formatStringFactory","tokenStringFactory","next","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eol","eatWhile","singleLineStringErrors","isString","pop","push","align","pushBracketScope","column","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","slice","basecolumn","addErr","Pass","scope","closing","electricInput","closeBrackets","triples","lineComment","fold","defineMIME","str","split","name","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri","getMode","backdrop","format","string","args","Array","prototype","call","arguments","replace","n","mode_python","mode_stex","SEPA","TAIL","rx_TAIL","NAME","rx_NAME","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","change","to_mode","local","to_explicit","phase","stage","context","tmp_stex","tmp","to_verbatim","tmp_py","skipToEnd","to_comment","as_block","ctx","tok","_config","parserConfig","pushCommand","command","cmdState","peekCommand","popCommand","plug","closeBracket","getMostPowerful","styleIdentifier","addPluginPattern","pluginName","cmdStyle","styles","this","bracketNo","argument","openBracket","plugins","setState","f","normal","source","cmdName","hasOwnProperty","beginParams","inMathMode","ch","endModeSeq","s"],"sourceRoot":""}